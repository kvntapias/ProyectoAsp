@model EventNowASP.Models.Usuario
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Session["iduser"] != null)
{
    if (Model.Id == Int32.Parse(Session["iduser"].ToString()) || Session["Username"].ToString() == "admin")
    {
        <h2>Editar perfil</h2>
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.NombreEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NombreEmpresa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreEmpresa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Session["Username"].ToString() == "admin")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Rol, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Rol, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            @*<div class="form-group">
                @Html.LabelFor(model => model.NIT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NIT, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <input type="hidden" value="@Model.Contraseña"/>


                    @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control", @id = "Password", @autocomplete = "off", @Type = "hidden" } })


            @*<div class="form-group">
                @Html.Label("Confirmar contraseña", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class = "form-control" id = "ConfirmPassword" autocomplete="off" type="password" required />
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Actualizar" class="btn btn-default" id="btnUpdate"/>
                </div>
            </div>
            <label id="msg"></label>
        </div>
        }
    }
    else
    {
        <div class="jumbotron">
            <h1 class="display-4">Ups!</h1>
            <p class="lead">No tienes acceso a esta seccion.</p>
            <hr class="my-4">
        </div>
    }
}

<script>

</script>


